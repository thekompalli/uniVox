# PS-06 Competition System - Nginx Configuration
# Production-ready reverse proxy configuration

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Load dynamic modules
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    log_format json escape=json '{'
        '"timestamp": "$time_iso8601", '
        '"remote_addr": "$remote_addr", '
        '"request_method": "$request_method", '
        '"request_uri": "$request_uri", '
        '"status": $status, '
        '"body_bytes_sent": $body_bytes_sent, '
        '"request_time": $request_time, '
        '"upstream_response_time": "$upstream_response_time", '
        '"user_agent": "$http_user_agent", '
        '"x_forwarded_for": "$http_x_forwarded_for"'
    '}';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # File upload settings
    client_max_body_size 500M;
    client_body_buffer_size 16K;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;
    client_body_timeout 60;
    client_header_timeout 60;
    send_timeout 60;
    
    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=status:10m rate=100r/m;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    
    # Upstream servers
    upstream ps06_api {
        least_conn;
        server api:8000 max_fails=3 fail_timeout=30s;
        # Add more API servers for scaling
        # server api2:8000 max_fails=3 fail_timeout=30s;
        # server api3:8000 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }
    
    upstream ps06_flower {
        server flower:5555;
    }
    
    # Security headers map
    map $sent_http_content_type $content_type_csp {
        ~^text/ "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:;";
        default "default-src 'self';";
    }
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # DH params for perfect forward secrecy
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    # Main server block
    server {
        listen 80;
        server_name _;
        
        # Health check endpoint (bypass SSL)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # HTTPS server block
    server {
        listen 443 ssl http2;
        server_name ps06.example.com;  # Replace with your domain
        
        # SSL certificate paths (update with your certificates)
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy $content_type_csp always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        
        # Remove server header
        more_clear_headers Server;
        
        # Root location - serve static files or redirect to API docs
        location / {
            return 301 /api/docs;
        }
        
        # API endpoints
        location /api/ {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            limit_conn addr 10;
            
            # Proxy settings
            proxy_pass http://ps06_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Handle large uploads
            proxy_request_buffering off;
            proxy_max_temp_file_size 0;
        }
        
        # File upload endpoint with special handling
        location /api/v1/process {
            # Higher rate limit for file uploads
            limit_req zone=upload burst=5 nodelay;
            limit_conn addr 2;
            
            # Increased timeouts for file processing
            proxy_pass http://ps06_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for large file uploads
            proxy_connect_timeout 60s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            
            # Disable buffering for large uploads
            proxy_request_buffering off;
            proxy_buffering off;
            
            # Progress tracking
            upload_progress uploads 1m;
        }
        
        # Status endpoints with higher rate limits
        location ~ ^/api/v1/(status|health|metrics) {
            limit_req zone=status burst=50 nodelay;
            
            proxy_pass http://ps06_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Short timeouts for status checks
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # Cache health checks briefly
            proxy_cache_valid 200 10s;
        }
        
        # WebSocket support for real-time updates
        location /api/v1/ws/ {
            proxy_pass http://ps06_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }
        
        # Flower monitoring interface (protect with auth)
        location /flower/ {
            # Basic auth (configure separately)
            auth_basic "Monitoring Access";
            auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://ps06_flower/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Rewrite for flower's base path
            proxy_redirect off;
            sub_filter_once off;
            sub_filter_types text/html text/css text/javascript application/javascript;
            sub_filter 'href="/' 'href="/flower/';
            sub_filter 'src="/' 'src="/flower/';
        }
        
        # Static file serving (if needed)
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # Compression for static files
            gzip_static on;
        }
        
        # File download endpoint
        location /api/v1/download/ {
            # Internal redirect for X-Accel-Redirect
            internal;
            alias /app/data/results/;
            
            # Security headers for downloads
            add_header Content-Disposition "attachment";
            add_header X-Robots-Tag "noindex, nofollow";
        }
        
        # Deny access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ \.(env|ini|conf|log)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /var/www/html;
            internal;
        }
        
        location = /50x.html {
            root /var/www/html;
            internal;
        }
    }
    
    # Optional: Separate server block for development
    server {
        listen 8080;
        server_name localhost dev.ps06.local;
        
        # Development settings (no SSL, relaxed security)
        location /api/ {
            proxy_pass http://ps06_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # CORS headers for development
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        location / {
            return 301 /api/docs;
        }
    }
}

# Stream block for TCP/UDP proxying (if needed)
stream {
    # Example: PostgreSQL proxy
    # upstream postgres {
    #     server postgres:5432;
    # }
    # 
    # server {
    #     listen 5432;
    #     proxy_pass postgres;
    #     proxy_timeout 1s;
    #     proxy_responses 1;
    # }
}

# Connection upgrade mapping
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# Include additional configuration files
include /etc/nginx/conf.d/*.conf;